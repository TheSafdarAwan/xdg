* Completion

** Mini Buffer Completion System

*** Ivy
:PROPERTIES:
:ID:       cdc04fab-4367-4fde-bb77-3827387f796e
:END:

#+begin_src emacs-lisp

  (use-package ivy
    :diminish
    :demand
    :bind(
          :map ivy-minibuffer-map
          ("TAB" . ivy-alt-done)
          ("C-l" . ivy-alt-done)
          ;; ("C-j" . ivy-next-line)
          ;; ("C-k" . ivy-previous-line)
          :map ivy-switch-buffer-map
          ("C-l" . ivy-done)
          ;; ("C-k" . ivy-previous-line)
          ("C-d" . ivy-switch-buffer-kill)
          :map ivy-reverse-i-search-map
          ;; ("C-k" . ivy-previous-line)
          ("C-d" . ivy-reverse-i-search-kill)
          )
    :init
    (setq ivy-use-selectable-prompt t) ;; make ivy minibifufer items un-selectable
    (setq ivy-re-builders-alist '((t . orderless-ivy-re-builder)))
    (add-to-list 'ivy-highlight-functions-alist
                 '(orderless-ivy-re-builder . orderless-ivy-highlight))
    :config
    (ivy-mode 1)
    )

#+end_src

*** Counsel

#+begin_src emacs-lisp

  (use-package counsel
    :bind (
           ("M-x" . counsel-M-x)
           ("C-x b" . counsel-ibuffer)
           ;; ("C-c f" . counsel-fzf)
           ("C-x C-f" . counsel-find-file)
           :map minibuffer-local-map
           ("C-r" . 'counsel-minibuffer-history)
           )
    :config
    (setq ivy-initial-inputs-alist nil) ;; don't start search with ^
    ;; add keymap  swiper
    (global-set-key (kbd "M-s") 'swiper)
    ;; buffer switcher
    (global-set-key (kbd "M-C-b") 'counsel-switch-buffer))

  ;; extend ivy
  (use-package ivy-rich
    :init
    (ivy-rich-mode 1))

#+end_src

*** Orderless

#+begin_src emacs-lisp

  (use-package orderless
    :ensure t
    :custom
    (completion-styles '(orderless basic))
    (completion-category-overrides '((file (styles basic partial-completion)))))

#+end_src

*** Embark

#+begin_src emacs-lisp

  (use-package embark
    :bind
    (("C-." . embark-act)         ;; pick some comfortable binding
     ("C-;" . embark-dwim)        ;; good alternative: M-.
     ("C-h B" . embark-bindings)) ;; alternative for `describe-bindings'

    :init
    ;; Optionally replace the key help with a completing-read interface
    ;; (setq prefix-help-command #'embark-prefix-help-command)

    ;; Show the Embark target at point via Eldoc.  You may adjust the Eldoc
    ;; strategy, if you want to see the documentation from multiple providers.
    ;; (add-hook 'eldoc-documentation-functions #'embark-eldoc-first-target)
    ;; (setq eldoc-documentation-strategy #'eldoc-documentation-compose-eagerly)

    :config
    ;; Hide the mode line of the Embark live/completions buffers
    (add-to-list 'display-buffer-alist
                 '("\\`\\*Embark Collect \\(Live\\|Completions\\)\\*"
                   nil
                   (window-parameters (mode-line-format . none)))))

#+end_src

** Buffer Completion

*** Company Mode

#+begin_src emacs-lisp

  (use-package company
    :init
    (setq company-minimum-prefix-length 1)
    (setq company-global-modes '(not erc-mode message-mode eshell-mode))
    (setq company-idle-delay
          (lambda () (if (company-in-string-or-comment) nil 0.3)))
    :config
    (add-hook 'after-init-hook 'global-company-mode))

#+end_src
