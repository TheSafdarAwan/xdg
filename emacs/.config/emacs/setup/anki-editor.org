* Adding Anki integration with org-mode

#+BEGIN_SRC emacs-lisp
  (use-package anki-editor
    :ensure t
    :after org
    :bind (:map org-mode-map
                ("<f12>" . anki-editor-cloze-region-auto-incr)
                ("<f11>" . anki-editor-cloze-region-dont-incr)
                ("<f10>" . anki-editor-reset-cloze-number)
                ("<f9>"  . anki-editor-push-tree))
    :hook (org-capture-after-finalize . anki-editor-reset-cloze-number) ; Reset cloze-number after each capture.
    :config
    (setq anki-editor-create-decks t ;; Allow anki-editor to create a new deck if it doesn't exist
          anki-editor-org-tags-as-anki-tags t)

    (defun anki-editor-cloze-region-auto-incr (&optional arg)
      "Cloze region without hint and increase card number."
      (interactive)
      (anki-editor-cloze-region my-anki-editor-cloze-number "")
      (setq my-anki-editor-cloze-number (1+ my-anki-editor-cloze-number))
      (forward-sexp))
    (defun anki-editor-cloze-region-dont-incr (&optional arg)
      "Cloze region without hint using the previous card number."
      (interactive)
      (anki-editor-cloze-region (1- my-anki-editor-cloze-number) "")
      (forward-sexp))
    (defun anki-editor-reset-cloze-number (&optional arg)
      "Reset cloze number to ARG or 1"
      (interactive)
      (setq my-anki-editor-cloze-number (or arg 1)))
    (defun anki-editor-push-tree ()
      "Push all notes under a tree."
      (interactive)
      (anki-editor-push-notes '(4))
      (anki-editor-reset-cloze-number))
    ;; Initialize
    (anki-editor-reset-cloze-number)
    )
#+end_src

** Templates

#+BEGIN_SRC emacs-lisp
  ;; Org-capture templates
  (setq org-my-anki-file "~/safdar-local/anki.org")
  (add-to-list 'org-capture-templates
               '("o" "Anki basic"
                 entry
                 (file+headline org-my-anki-file "Anki Cards")
                 "\n* %<%H:%M>   %^g\n:PROPERTIES:\n:ANKI_NOTE_TYPE: Basic\n:ANKI_DECK: MyDeck\n:END:\n** Front\n%?\n** Back\n%x\n"))
  (add-to-list 'org-capture-templates
               '("A" "Anki cloze"
                 entry
                 (file+headline org-my-anki-file "Anki Cards")
                 "\n* %<%H:%M>   %^g\n:PROPERTIES:\n:ANKI_NOTE_TYPE: Cloze\n:ANKI_DECK: MyDeck\n:END:\n** Text\n%x\n** Extra\n"))

  ;; Allow Emacs to access content from clipboard.
  (setq x-select-enable-clipboard t  
        x-select-enable-primary t)
#+END_SRC

* Custom Functions

** Create a new Frame for Org-capture

#+BEGIN_SRC emacs-lisp
  (defun make-orgcapture-frame ()
      "Create a new frame and run org-capture."
      (interactive)
      (make-frame '((name . "org-capture") (window-system . x)))
      (select-frame-by-name "org-capture")
      (counsel-org-capture)
      (delete-other-windows))
#+END_SRC

